import tkinter as tk

def printOnTextbox(textbox, msg):
	textbox.config(state=tk.NORMAL)
	current_text = textbox.get("1.0", "end-1c")
	textbox.delete('1.0', tk.END)
	textbox.insert(tk.END, current_text+'\n'+msg+'\n')
	textbox.config(state=tk.DISABLED)
	
def makeWidgetForEntry(window, labelframeMsg, labelMsg, buttonMsg, cmd):
	frame = tk.LabelFrame(window, text=labelframeMsg, width=300, height=80)
	frame.pack(pady=10)
	
	file_label = tk.Label(frame, text=labelMsg)
	file_label.pack(pady=10)
	
	folder_txt_entry = tk.Entry(frame, width=50)
	folder_txt_entry.pack(pady=5)
	
	file_button = tk.Button(frame, text=buttonMsg, command=cmd)
	file_button.pack(pady=5)
	
	return folder_txt_entry

def makeWidgetForRadio(window, labelframeMsg, dict):
	frame = tk.LabelFrame(window, text=labelframeMsg, width=300, height=80)
	frame.pack(pady=10)
	
	global infra_var
	infra_var = tk.StringVar()
	
	ro = 0
	col = 1		
	for key, value in dict.items():
		button = tk.Radiobutton(frame, text=key, value=value, variable=infra_var)
		button.grid(row=ro, column=col)
		if col % 4 == 0:
			ro = ro + 1
			col = 0
		col = col + 1	
	#unix_button.select()

def makeWidgetForText(window, labelframeMsg, labelMsg):
	frame = tk.LabelFrame(window, text=labelframeMsg, width=200, height=150, padx=20)
	frame.pack(pady=10)

	# Create the result display section
	result_label = tk.Label(frame, text=labelMsg)
	result_label.pack(pady=10)
	
	#스크롤바 생성
	scrollbar = tk.Scrollbar(frame, orient='vertical')
	scrollbar.pack(side='right', fill='y')
	
	global result_text
	
	result_text = tk.Text(frame, width=50, height=15, state=tk.DISABLED, yscrollcommand=scrollbar.set)
	result_text.pack(pady=5, side='left', fill='both', expand=True)
		
	# Configure the scrollbar to work with the textbox
	scrollbar.configure(command=result_text.yview)
	
def makeWidgetForTable(window, labelframeMsg, labelMsg, data):
	frame = tk.LabelFrame(window, text=labelframeMsg, width=300, height=80)
	frame.pack(pady=10)
	
	file_label = tk.Label(frame, text=labelMsg)
	file_label.pack(pady=10)
	
	num_rows = len(data)
	num_cols = len(data[0])
	
	# Create table cells
	for row in range(num_rows):
		row_frame = tk.Frame(frame)
		row_frame.pack()
		for col in range(num_cols):
			cell_value = data[row][col]
			label = tk.Label(row_frame, text=cell_value, relief=tk.RIDGE, width=15)
			#label.pack(side=tk.LEFT, padx=5, pady=5)
			label.pack(side=tk.LEFT)
	
	
	
	
	
	
	
	
	



